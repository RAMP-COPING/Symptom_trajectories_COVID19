rownames_to_column()
names(CI_clustered.phq) <- c("predictor",
"1_lower","1_upper",
"3_lower","3_upper",
"4_lower","4_upper"
)
CI_clustered.phq <- CI_clustered.phq %>%
pivot_longer(!predictor) %>%
separate(name, c("class","CI")) %>%
pivot_wider(names_from = CI,
values_from= value)
CI_clustered.phq$predictor <- gsub("-",".",CI_clustered.phq$predictor)
CI_clustered.phq$predictor <- gsub(" ",".",CI_clustered.phq$predictor)
CI_clustered.phq$predictor <- gsub("/",".",CI_clustered.phq$predictor)
CI_clustered.phq$predictor <- gsub("\\(Intercept\\)","intercept",CI_clustered.phq$predictor)
CI_clustered.phq
phq.coeff <- format(round(t(as.data.frame(phq_summary_table$coefficients)), 2), nsmall = 2)
phq.p <- format(round(t(as.data.frame(p_clustered.phq)), 3), nsmall = 3)
phq.p <- sub('^(-)?0[.]', '\\1.', phq.p)
relative_risk_clustered.phq$RelativeRisk2 <- format(round(relative_risk_clustered.phq$RelativeRisk, 2), nsmall = 2)
phq.rrr <- pivot_wider(relative_risk_clustered.phq[,c("class","predictor","RelativeRisk2")], names_from = class, values_from = RelativeRisk2)
CI_clustered.phq$CI <- paste0(format(round(CI_clustered.phq$lower, 2),nsmall = 2),", ", format(round(as.numeric(CI_clustered.phq$upper), 2),nsmall = 2))
phq.ci <- pivot_wider(CI_clustered.phq[,c("predictor","class","CI")], names_from = class, values_from = CI)
phq_class1_table <- cbind(phq.coeff[,1],phq.p[,1],phq.rrr[,2],phq.ci[,2])
colnames(phq_class1_table) <- c("B","p","RRR", "95% CI")
phq_class3_table <- cbind(phq.coeff[,2],phq.p[,2],phq.rrr[,3],phq.ci[,3])
colnames(phq_class3_table) <- c("B","p","RRR", "95% CI")
phq_class4_table <- cbind(phq.coeff[,3],phq.p[,3],phq.rrr[,4],phq.ci[,4])
colnames(phq_class4_table) <- c("B","p","RRR", "95% CI")
phq_stats_table <- cbind(phq_class1_table,phq_class3_table,phq_class4_table)
phq_stats_table <- phq_stats_table %>% rownames_to_column(var = "predictor")
writexl::write_xlsx(phq_stats_table,"../../output/phq_table.xlsx")
plot_phq_clustered_dat <- full_join(relative_risk_clustered.phq,
CI_clustered.phq,
by=c("class","predictor"))
#plot_phq_as.is_dat <- full_join(relative_risk_as.is.phq,
#                                     CI_as.is.phq,
#                                     by=c("class","predictor"))
phq_pvals <- rownames_to_column(as.data.frame(t(p_clustered.phq)),"predictor")
phq_pvals2 <- pivot_longer(phq_pvals,c("1":"4"),names_to = "class")
table_phq_clustered_dat <- full_join(plot_phq_clustered_dat,
phq_pvals2,
by=c("class","predictor"))
plot_phq_clustered_dat$category <-plot_phq_clustered_dat$predictor
plot_phq_clustered_dat <-
plot_phq_clustered_dat %>%
mutate(category = case_when(grepl("age",predictor) ~ "Age",
grepl("gender",predictor) ~ "Gender",
grepl("ethnicity_clustered",predictor) ~ "Ethnicity",
grepl("employment_prior_covid",predictor) ~ "Employment before covid",
grepl("employment_change",predictor) ~ "Change in employment due to covid",
grepl("key_worker",predictor) ~ "Key worker status",
grepl("anxiety_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("depressive_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("eating_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("obsessive_compulsive_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("psychotic_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("personality_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("bipolar_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("ptsd_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("autism_disorders",predictor) ~ "Pre-existing mental health diagnosis",
grepl("intercept",predictor) ~ "Intercept"
),
predictor = case_when(grepl("age",predictor) ~ gsub("age","",predictor),
grepl("gender",predictor) ~ gsub("gender","",predictor),
grepl("ethnicity_clustered",predictor) ~ gsub("ethnicity_clustered","",predictor),
grepl("employment_prior_covid",predictor) ~ gsub("employment_prior_covid","",predictor),
grepl("employment_change",predictor) ~ gsub("employment_change","",predictor),
grepl("key_worker",predictor) ~ gsub("key_worker","",predictor),
grepl("anxiety_disorders",predictor) ~ gsub("anxiety_disorders","",predictor),
grepl("depressive_disorders",predictor) ~ gsub("depressive_disorders","",predictor),
grepl("eating_disorders",predictor) ~ gsub("eating_disorders","",predictor),
grepl("obsessive_compulsive_disorders",predictor) ~ gsub("obsessive_compulsive_disorders","",predictor),
grepl("psychotic_disorders",predictor) ~ gsub("psychotic_disorders","",predictor),
grepl("personality_disorders",predictor) ~ gsub("personality_disorders","",predictor),
grepl("bipolar_disorders",predictor) ~ gsub("bipolar_disorders","",predictor),
grepl("ptsd_disorders",predictor) ~ gsub("ptsd_disorders","",predictor),
grepl("autism_disorders",predictor) ~ gsub("autism_disorders","",predictor),
grepl("intercept",predictor) ~ "intercept")
)
#plot_phq_as.is_dat$category <-plot_phq_as.is_dat$predictor
#plot_phq_as.is_dat <-
#plot_phq_as.is_dat %>%
# mutate(category = case_when(grepl("age",predictor) ~ "Age",
#                             grepl("gender",predictor) ~ "Gender",
#                             grepl("ethnicity",predictor) ~ "Ethnicity",
#                             grepl("employment_prior_covid",predictor) ~ "Employment before covid",
#                             grepl("employment_change",predictor) ~ "Change in employment due to covid",
#                             grepl("key_worker",predictor) ~ "Key worker status",
#                             grepl("anxiety_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("depressive_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("eating_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("obsessive_compulsive_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("psychotic_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("personality_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("bipolar_disorders",predictor) ~ "Pre-existing mental health diagnosis",
#                             grepl("ptsd_disorders",predictor) ~ gsub("ptsd_disorders","",predictor),
#                              grepl("autism_disorders",predictor) ~ gsub("autism_disorders","",predictor),
#                             grepl("intercept",predictor) ~ "Intercept"
#                             ),
#
#        predictor = case_when(grepl("age",predictor) ~ gsub("age","",predictor),
#                              grepl("gender",predictor) ~ gsub("gender","",predictor),
#                              grepl("ethnicity",predictor) ~ gsub("ethnicity_clustered","",predictor),
#                              grepl("employment_prior_covid",predictor) ~ gsub("employment_prior_covid","",predictor),
#                              grepl("employment_change",predictor) ~ gsub("employment_change","",predictor),
#                              grepl("key_worker",predictor) ~ gsub("key_worker","",predictor),
#                              grepl("anxiety_disorders",predictor) ~ gsub("anxiety_disorders","",predictor),
#                              grepl("depressive_disorders",predictor) ~ gsub("depressive_disorders","",predictor),
#                              grepl("eating_disorders",predictor) ~ gsub("eating_disorders","",predictor),
#                              grepl("obsessive_compulsive_disorders",predictor) ~ gsub("obsessive_compulsive_disorders","",predictor),
#                              grepl("psychotic_disorders",predictor) ~ gsub("psychotic_disorders","",predictor),
#                              grepl("personality_disorders",predictor) ~ gsub("personality_disorders","",predictor),
#                              grepl("bipolar_disorders",predictor) ~ gsub("bipolar_disorders","",predictor),
#                              grepl("ptsd_disorders",predictor) ~ gsub("ptsd_disorders","",predictor),
#                              grepl("autism_disorders",predictor) ~ gsub("autism_disorders","",predictor),
#                              grepl("intercept",predictor) ~ "intercept")
#                              )
#
temp <- plot_phq_clustered_dat
plot_phq_clustered_dat <- temp
#temp2 <- temp %>%
#  filter(predictor == "Autism.spectrum.disorder")
plot_phq_clustered_dat$category <- factor(plot_phq_clustered_dat$category,
levels=c("Intercept","Gender","Ethnicity","Age","Employment before covid","Change in employment due to covid","Key worker status","Pre-existing mental health diagnosis"))
plot_phq_clustered_dat$predictor <- fct_reorder2(plot_phq_clustered_dat$predictor, plot_phq_clustered_dat$class,  plot_phq_clustered_dat$category)
plot_phq_clustered_dat$RelativeRisk <- round(plot_phq_clustered_dat$RelativeRisk, digits=1)
plot_phq_clustered_dat$lower <- round(plot_phq_clustered_dat$lower, digits=1)
plot_phq_clustered_dat$upper <- round(plot_phq_clustered_dat$upper, digits=1)
plot_phq_clustered_dat <- plot_phq_clustered_dat %>%
mutate(class = case_when(
class == "1" ~ "Class 1 (vs. Class 2)",
class == "3" ~ "Class 3 (vs. Class 2)",
class == "4" ~ "Class 4 (vs. Class 2)"))
plot_phq_clustered_dat <- plot_phq_clustered_dat %>%
mutate(category = case_when(
category == "Intercept" ~ "Intercept",
category == "Gender" ~ "Gender (vs. male)",
category == "Ethnicity" ~ "Ethnicity (vs. white)",
category == "Age" ~ "Age (vs. 26-35y)",
category == "Employment before covid" ~ "Employment status (vs. employed*)",
category == "Change in employment due to covid" ~ "Employment change (vs. no change)",
category == "Key worker status" ~ "Key worker status (vs. not a key worker)",
category == "Pre-existing mental health diagnosis" ~ "Pre-existing mental health diagnosis"))
plot_phq_clustered_dat$category <- factor(plot_phq_clustered_dat$category, levels=c("Intercept", "Age (vs. 26-35y)", "Gender (vs. male)", "Ethnicity (vs. white)", "Employment status (vs. employed*)", "Employment change (vs. no change)", "Key worker status (vs. not a key worker)", "Pre-existing mental health diagnosis"))
plot_phq_clustered_dat <- plot_phq_clustered_dat %>%
mutate(predictor = case_when(
predictor == "intercept" ~ "Intercept",
predictor == "16.18" ~ "16-18y",
predictor == "19.25" ~ "19-25y",
predictor == "36.45" ~ "36-45y",
predictor == "46.55" ~ "46-55y",
predictor == "56.65" ~ "56-65y",
predictor == "66.70" ~ "66-70y",
predictor == "71+" ~ "71+y",
predictor == "Female" ~ "Female",
predictor == "Non.binary.Prefer.to.self.define" ~ "Non-binary/Prefer to self define",
predictor == "Minoritised.ethnic.community" ~ "Minoritised ethnic community",
predictor == "Unemployed" ~ "Unemployed",
predictor == "Retired" ~ "Retired",
predictor == "Student" ~ "Student",
predictor == "Decreased.employment" ~ "Decreased employment",
predictor == "Furloughed" ~ "Furloughed",
predictor == "Increased.employment" ~ "Increased employment",
predictor == "Government.defined.key.worker" ~ "Key worker",
predictor == "Anxiety.disorder" ~ "Anxiety disorder",
predictor == "Depressive.disorder" ~ "Depressive disorder",
predictor == "Eating.disorder" ~ "Eating disorder",
predictor == "Obsessive.compulsive.disorder" ~ "OCRD",
predictor == "Psychotic.disorder" ~ "Psychotic disorder",
predictor == "Personality.disorder" ~ "Personality disorder",
predictor == "Bipolar.disorder" ~ "Bipolar disorder",
predictor == "PTSD" ~ "PTSD",
predictor == "Autism.spectrum.disorder" ~ "ASD"
))
plot_phq_clustered_dat$predictor <-
factor(plot_phq_clustered_dat$predictor, levels = rev(c("Intercept", "16-18y", "19-25y", "36-45y", "46-55y", "56-65y", "66-70y", "71+y", "Female", "Non-binary/Prefer to self define", "Minoritised ethnic community", "Unemployed","Retired","Student", "Decreased employment", "Furloughed", "Increased employment", "Key worker", "Anxiety disorder", "Depressive disorder", "Eating disorder", "OCRD", "Psychotic disorder",  "Personality disorder", "Bipolar disorder", "PTSD", "ASD")))
files.sources = paste0("../functions/",list.files("../functions"))
sapply(files.sources, source)
phq_eth_clustered_forest <-relrisk.forest(plot_phq_clustered_dat,
plot_title="Relative risk (95% CI) of class membership: PHQ-9",
sub_title="",
lowlim = -1,
uplim = 17)
phq_eth_clustered_forest <- phq_eth_clustered_forest +
ylab("RRR (95% CI)") +
labs(colour = "Category")
phq_eth_clustered_forest
ggsave(
filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/PHQ/depression_RelativeRisk_forestPlot_ethnicityClustered.png"),
plot=phq_eth_clustered_forest,
width = 12, height = 5, dpi = 600, units = "in")
#ggsave(
#  filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/PHQ/depression_RelativeRisk_forestPlot.png"),
#  plot=phq_eth_as.is_forest,
#  width = 18, height = 10, dpi = 150, units = "in")
files.sources = paste0("../functions/",list.files("../functions"))
sapply(files.sources, source)
phq_eth_clustered_forest <-relrisk.forest(plot_phq_clustered_dat,
plot_title="PHQ-9",
sub_title="",
lowlim = -1,
uplim = 17)
phq_eth_clustered_forest <- phq_eth_clustered_forest +
ylab("RRR (95% CI)") +
labs(colour = "Category")
phq_eth_clustered_forest
ggsave(
filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/PHQ/depression_RelativeRisk_forestPlot_ethnicityClustered.png"),
plot=phq_eth_clustered_forest,
width = 12, height = 5, dpi = 600, units = "in")
#ggsave(
#  filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/PHQ/depression_RelativeRisk_forestPlot.png"),
#  plot=phq_eth_as.is_forest,
#  width = 18, height = 10, dpi = 150, units = "in")
files.sources = paste0("../functions/",list.files("../functions"))
sapply(files.sources, source)
phq_eth_clustered_forest <-relrisk.forest(plot_phq_clustered_dat,
plot_title="PHQ-9",
sub_title="",
lowlim = -1,
uplim = 35)
phq_eth_clustered_forest <- phq_eth_clustered_forest +
ylab("RRR (95% CI)") +
labs(colour = "Category")
phq_eth_clustered_forest
ggsave(
filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/PHQ/depression_RelativeRisk_forestPlot_ethnicityClustered2.png"),
plot=phq_eth_clustered_forest,
width = 12, height = 5, dpi = 600, units = "in")
#ggsave(
#  filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/PHQ/depression_RelativeRisk_forestPlot.png"),
#  plot=phq_eth_as.is_forest,
#  width = 18, height = 10, dpi = 150, units = "in")
gad_eth_clustered_forest <-relrisk.forest(plot_gad_clustered_dat,
plot_title="GAD-7",
sub_title="",
lowlim = -1,
uplim = 35)
gad_eth_clustered_forest <- gad_eth_clustered_forest +
ylab("RRR (95% CI)") +
labs(colour = "Category")
gad_eth_clustered_forest
ggsave(
filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/GAD/anxiety_RelativeRisk_forestPlot_ethnicityClustered2.png"),
plot=gad_eth_clustered_forest,
width = 12, height = 5, dpi = 600, units = "in")
#ggsave(
#  filename=file.path(dirname(dirname(getwd())),"output/ForestPlots/GAD/anxiety_RelativeRisk_forestPlot.png"),
#  plot=gad_eth_as.is_forest,
#  width = 18, height = 10, dpi = 150, units = "in")
dat_plot_curves_four<-data.frame(matrix(nrow=15, ncol=8))
colnames(dat_plot_curves_four)<-c("Class1","Class2","Class3","Class4",
"Observed1", "Observed2","Observed3","Observed4")
dat_plot_curves_four$Class1<- anhedonia.four.class.out$gh5$means_and_variances_data$y_estimated_means$values[,1]
runModels("./MPlus_input_gmm/MASQ/masq_GMM_piecewise_4_classes.inp",
recursive = FALSE,
showOutput=TRUE,
replaceOutfile="never")
# clear global environment
remove(list = ls())
# Install / load packages
if(!require(knitr)){
install.packages("knitr")
library(knitr)
}
#if(!require(summarytools)){
#  install.packages("summarytools")
#}
##  library(summarytools)
if(!require(data.table)){
install.packages("data.table")
library(data.table)
}
if(!require(kableExtra)){
install.packages("kableExtra")
library(kableExtra)
}
if(!require(glue)){
install.packages("glue")
library(glue)
}
if(!require(MplusAutomation)){
install.packages("MplusAutomation")
library(MplusAutomation)
}
if(!require(texreg)){
install.packages("texreg")
library(texreg)
}
if(!require(relimp)){
install.packages("relimp")
library(relimp)
}
if(!require(BiocManager)){
install.packages("BiocManager")
library(BiocManager)
}
if(!require(rhdf5)){
BiocManager::install("rhdf5")
library(rhdf5)
}
if(!require(plyr)){
install.packages("plyr")
library(plyr)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(kableExtra)){
install.packages("kableExtra")
library(kableExtra)
}
if(!require(lmtest)){
install.packages("lmtest")
library(lmtest)
}
## global workbook settings
knitr::opts_chunk$set(results = 'asis',
comment = NA,
prompt = FALSE,
cache = FALSE,
warning = FALSE,
echo = TRUE,
fig.height = 5,
fig.width = 10,
fig.align = "center")
#st_options(plain.ascii = FALSE,
#            style = "rmarkdown",
#            footnote = NA,
#            subtitle.emphasis = FALSE)
options(scipen = 999)
pres.palette <- c("#4ED1B7", "#F6C66A", "#3066BE", "#D90368","#1B2D2A",  "#4C2E05","#C98686")
timepoint_list <- c("7 Apr '20","19 May '20","2 Jun '20","16 Jun '20","30 Jun '20",
"14 Jul '20", "28 Jul '20","25 Aug '20","22 Sep '20","20 Oct '20",
"17 Nov '20","15 Dec '20","12 Jan '21","9 Feb '21",
"9 Mar '21", "6 Apr '21")
timepoint_list_anh <- c("7 Apr '20", "19 May '20","2 Jun '20","16 Jun '20","30 Jun '20",
"14 Jul '20", "28 Jul '20","25 Aug '20","22 Sep '20","20 Oct '20",
"17 Nov '20","15 Dec '20","12 Jan '21","9 Feb '21",
"9 Mar '21", "6 Apr '21")
runModels("./MPlus_input_gmm/MASQ/masq_GMM_piecewise_2_classes.inp",
recursive = FALSE,
showOutput=TRUE,
replaceOutfile="never"
)
runModels("./MPlus_input_gmm/MASQ/masq_GMM_piecewise_4_classes.inp",
recursive = FALSE,
showOutput=TRUE,
replaceOutfile="never")
anhedonia.four.class.out <- readModels("./MPlus_input_gmm/MASQ/masq_GMM_piecewise_4_classes.out",
recursive=FALSE)
justBIC_four_class <- anhedonia.four.class.out$summaries  %>%
select(c("Title",  "BIC", "aBIC")) %>%
arrange(BIC)
BIC_three_four_compare <- rbind(justBIC_three_class,
justBIC_four_class)
anhedonia.all.out <- readModels("./MPlus_input_gmm/MASQ/output",
recursive=FALSE,
what = c("summaries","class_counts"))
justSummariesGMM <- do.call("rbind.fill",
sapply(anhedonia.all.out ,"[", "summaries")) %>%
select(c("Title", "Parameters",  "Entropy", "AIC", "BIC","aBIC", "LL")) %>%
arrange(BIC)
justSummarieslgcm <- anhedonia.one.class.out$summaries %>%
select(c("Title", "Parameters", "AIC", "BIC","aBIC", "LL")) %>%
arrange(BIC)
justSummaries <- rbind(justSummariesGMM,justSummarieslgcm) %>%
arrange(BIC)
class_allocation_2 <- anhedonia.all.out$masq_GMM_piecewise_2_classes.out$class_counts$mostLikely %>%
kbl(caption = "Counts and proportions of most likely class membership: Two class solution",
align='lll',
digits = 2,
col.names = str_to_title(gsub("[.]", " ", names(anhedonia.all.out$masq_GMM_piecewise_2_classes.out$class_counts$mostLikely)))) %>%
kable_styling(position = "left",
"striped")
class_allocation_2
dat_plot_curves_four<-data.frame(matrix(nrow=15, ncol=8))
colnames(dat_plot_curves_four)<-c("Class1","Class2","Class3","Class4",
"Observed1", "Observed2","Observed3","Observed4")
dat_plot_curves_four$Class1<- anhedonia.four.class.out$gh5$means_and_variances_data$y_estimated_means$values[,1]
dat_plot_curves_four$Class2<- anhedonia.four.class.out$gh5$means_and_variances_data$y_estimated_means$values[,2]
dat_plot_curves_four$Class3<- anhedonia.four.class.out$gh5$means_and_variances_data$y_estimated_means$values[,3]
dat_plot_curves_four$Class4<- anhedonia.four.class.out$gh5$means_and_variances_data$y_estimated_means$values[,4]
dat_plot_curves_four$Observed1<- anhedonia.four.class.out$gh5$means_and_variances_data$y_observed_means$values[,1]
dat_plot_curves_four$Observed2<- anhedonia.four.class.out$gh5$means_and_variances_data$y_observed_means$values[,2]
dat_plot_curves_four$Observed3<- anhedonia.four.class.out$gh5$means_and_variances_data$y_observed_means$values[,3]
dat_plot_curves_four$Observed4<- anhedonia.four.class.out$gh5$means_and_variances_data$y_observed_means$values[,4]
dat_plot_curves_four$timepoint<-c(0:14)
dat_plot_curves_four<-dat_plot_curves_four%>%pivot_longer(-timepoint, names_to = "Model", values_to = "score")%>%mutate(Model = factor(Model, levels = c("Class1","Class2","Class3","Class4","Observed1","Observed2","Observed3","Observed4")))
dat_plot_curves_four <- dat_plot_curves_four %>%
mutate(Type = case_when(Model == "Observed1"~ "Observed",
Model == "Observed2"~ "Observed",
Model == "Observed3"~ "Observed",
Model == "Observed4"~ "Observed",
TRUE ~ "Estimated"),
Model = case_when(Model == "Observed1"~ "Class 1 (2%)",
Model == "Observed2"~ "Class 2 (68%)",
Model == "Observed3"~ "Class 3 (27%)",
Model == "Observed4"~ "Class 4 (4%)",
Model == "Class1"~ "Class 1 (2%)",
Model == "Class2"~ "Class 2 (68%)",
Model == "Class3"~ "Class 3 (27%)",
Model == "Class4"~ "Class 4 (4%)"
))
extra_rows <- dat_plot_curves_four %>%
filter(timepoint == 0)
extra_rows$score <- NA
extra_rows$timepoint <- -1
dat_plot_curves_four <- rbind(extra_rows,dat_plot_curves_four)
pres.palette2 <- c("#3066BE","#4ED1B7","#F6C66A","#D90368")
#change date to be accurate
dat_plot_curves_four$timepoint <-
c(0,0,0,0,0,0,0,0,
1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,
2,2,2,2,2,2,2,2,
2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,
3,3,3,3,3,3,3,3,
3.5,3.5,3.5,3.5,3.5,3.5,3.5,3.5,
4,4,4,4,4,4,4,4,
5,5,5,5,5,5,5,5,
6,6,6,6,6,6,6,6,
7,7,7,7,7,7,7,7,
8,8,8,8,8,8,8,8,
9,9,9,9,9,9,9,9,
10,10,10,10,10,10,10,10,
11,11,11,11,11,11,11,11,
12,12,12,12,12,12,12,12,
13,13,13,13,13,13,13,13)
growth_curves_fourclass <- ggplot() +
geom_line(data = dat_plot_curves_four,
aes(x = timepoint, y = score, colour = Model,linetype=Type)) +
geom_point(data = dat_plot_curves_four,
aes(x = timepoint, y = score, colour = Model, shape=Model), show.legend = F) +
scale_color_manual(values = pres.palette2) +
labs(x = "Follow up time point", y ="MASQ-anhedonia Score") +
scale_y_continuous(expand = c(0,0), limits = c(0,40), breaks=seq(0,40,4)) +
scale_x_continuous(expand = c(0,0), limits = c(-0.5,14.5), breaks=c(0, 1.5, 2, 2.5, 3, 3.5, 4,5,6,7,8,9,10,11,12,13),
#  scale_y_continuous(expand = c(0,0), limits = c(0,40), breaks=seq(0,40,4)) +
#  scale_x_continuous(expand = c(0,0), limits = c(-0.5,14.5), breaks=seq(0, 14, by = 1),
labels = timepoint_list_anh) +
geom_vline(xintercept= 2.5, linetype="solid", color = "grey") +
geom_vline(xintercept= 7, linetype="solid", color = "grey") +
geom_vline(xintercept= 11, linetype="solid", color = "grey") +
geom_hline(yintercept=0, linetype="dashed", color = "grey") +
geom_hline(yintercept=40, linetype="dashed", color = "grey") +
geom_hline(yintercept=20, linetype="dashed", color = "grey") +
theme(panel.grid.major.y = element_blank(),
axis.text = element_text(colour="black", size = 8),
axis.title = element_text(colour="black", size = 12),
axis.text.x = element_text(angle = 45,
hjust=1),
legend.key = element_blank(),
legend.text = element_text(colour = "black", size = 8),
panel.background = element_blank())
growth_curves_fourclass
ggsave(
filename=file.path(save_file_path,"anhedonia_fourclass_trajectory.png"),
plot =growth_curves_fourclass,
width = 20, height = 10, dpi = 150, units = "cm")
save_file_path <- file.path(dirname(dirname(getwd())),"output/supplementary_tables_figures/MASQ/")
pres.palette2 <- c("#3066BE","#4ED1B7","#F6C66A","#D90368")
#change date to be accurate
dat_plot_curves_four$timepoint <-
c(0,0,0,0,0,0,0,0,
1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,
2,2,2,2,2,2,2,2,
2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,
3,3,3,3,3,3,3,3,
3.5,3.5,3.5,3.5,3.5,3.5,3.5,3.5,
4,4,4,4,4,4,4,4,
5,5,5,5,5,5,5,5,
6,6,6,6,6,6,6,6,
7,7,7,7,7,7,7,7,
8,8,8,8,8,8,8,8,
9,9,9,9,9,9,9,9,
10,10,10,10,10,10,10,10,
11,11,11,11,11,11,11,11,
12,12,12,12,12,12,12,12,
13,13,13,13,13,13,13,13)
growth_curves_fourclass <- ggplot() +
geom_line(data = dat_plot_curves_four,
aes(x = timepoint, y = score, colour = Model,linetype=Type)) +
geom_point(data = dat_plot_curves_four,
aes(x = timepoint, y = score, colour = Model, shape=Model), show.legend = F) +
scale_color_manual(values = pres.palette2) +
labs(x = "Follow up time point", y ="MASQ-anhedonia Score") +
scale_y_continuous(expand = c(0,0), limits = c(0,40), breaks=seq(0,40,4)) +
scale_x_continuous(expand = c(0,0), limits = c(-0.5,14.5), breaks=c(0, 1.5, 2, 2.5, 3, 3.5, 4,5,6,7,8,9,10,11,12,13),
#  scale_y_continuous(expand = c(0,0), limits = c(0,40), breaks=seq(0,40,4)) +
#  scale_x_continuous(expand = c(0,0), limits = c(-0.5,14.5), breaks=seq(0, 14, by = 1),
labels = timepoint_list_anh) +
geom_vline(xintercept= 2.5, linetype="solid", color = "grey") +
geom_vline(xintercept= 7, linetype="solid", color = "grey") +
geom_vline(xintercept= 11, linetype="solid", color = "grey") +
geom_hline(yintercept=0, linetype="dashed", color = "grey") +
geom_hline(yintercept=40, linetype="dashed", color = "grey") +
geom_hline(yintercept=20, linetype="dashed", color = "grey") +
theme(panel.grid.major.y = element_blank(),
axis.text = element_text(colour="black", size = 8),
axis.title = element_text(colour="black", size = 12),
axis.text.x = element_text(angle = 45,
hjust=1),
legend.key = element_blank(),
legend.text = element_text(colour = "black", size = 8),
panel.background = element_blank())
growth_curves_fourclass
ggsave(
filename=file.path(save_file_path,"anhedonia_fourclass_trajectory.png"),
plot =growth_curves_fourclass,
width = 20, height = 10, dpi = 150, units = "cm")
